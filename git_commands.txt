

git config --global user.name "Deepak"                         // no need to use global, if local i.e. if a project wants a different
                                                               // user name and email
  
git config --global user.email "deepak94.mce@gmail.com"

****Move to the project directory*****
//dir- win to list down the files in directory
//cls- clear screen
//open in mac = explorer in win
//touch in mac = copy con in win

git init

echo "# text" >> README.md   "creates readme.md with text

git add .

git commit -m "first commit"

git remote add origin <url>

git push -u origin master

git status //git status -s or git status --short

git diff

git commit -a   //skipping git add step    -m "" //messages

git push origin master   //origin- remote name    master-branch name

git log     //returns log of previous commits (git log -1, returns latest commit) 

git log --oneline //simplified view of commits

git log --stat  //detailed view of all commits

git log --patch  //detailed diff of commits , q to quit


git rm file_name  // to remove a file completely

git rm --cached   //do  not remove, only not track

git mv file_name desired_name   /to rename file


BRANCHING
git checkout -b new_branch  // to create and track new branch , not the master branch (master stays behind, the ponter tracks new_branch)

git checkout master  // to return to master branch

git branch name   //only to create a branch and not checkout

//to stash (work in progress)
git add .
git stash
git stash list
git stash show
git stash pop

TO MERGE

git merge new_branch    /be in master branch

:wq   , to save na dquit wem



To RESET,

git reset --soft (num from log oneline)//moves commits to staging area
git reset --mixed (")// moves changes to working directory
git reset --hard (")// puts to trash including staging (be careful)